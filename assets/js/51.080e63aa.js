(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{510:function(t,n,s){"use strict";s.r(n);var a=s(65),e=Object(a.a)({},(function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"nginx部署"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx部署"}},[t._v("#")]),t._v(" nginx部署")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("首先当然是服务器上安装docker和docker-compose")])]),t._v(" "),s("li",[s("p",[t._v("然后去"),s("a",{attrs:{href:"http://nginx.org/en/download.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("nginx官网"),s("OutboundLink")],1),t._v("找到你想安装的版本,下载,找到它的配置文件")]),t._v(" "),s("div",{staticClass:"language-ini extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ini"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#user  nobody;")]),t._v("\nworker_processes  1;\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#error_log  logs/error.log;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#error_log  logs/error.log  notice;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#error_log  logs/error.log  info;")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#pid        logs/nginx.pid;")]),t._v("\n\n\nevents {\n    worker_connections  1024;\n}\n\n\nhttp {\n    include       mime.types;\n    default_type  application/octet-stream;\n\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#access_log  logs/access.log  main;")]),t._v("\n\n    sendfile        on;\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#tcp_nopush     on;")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#keepalive_timeout  0;")]),t._v("\n    keepalive_timeout  300;\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#gzip  on;")]),t._v("\n\n    server {\n        listen       80;\n        server_name  localhost;\n\n\n        location / {\n            root   /usr/share/nginx/html;\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#匹配不到资源路径的时候，先去读取index.html，然后再路由")]),t._v("\n            try_files $uri $uri/ /index.html last;\n            index  index.html index.htm;\n        }\n\n\n        error_page   500 502 503 504  /50x.html;\n        "),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("location")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("/50x.html {")]),t._v("\n            root   html;\n        }\n\n    }\n\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# HTTPS server")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#server {")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    listen       443 ssl;")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    server_name  localhost;")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    ssl_certificate      cert.pem;")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    ssl_certificate_key  cert.key;")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    ssl_session_cache    shared:SSL:1m;")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    ssl_session_timeout  5m;")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    ssl_ciphers  HIGH:!aNULL:!MD5;")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    ssl_prefer_server_ciphers  on;")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    location / {")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#        root   html;")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#        index  index.html index.htm;")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    }")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#}")]),t._v("\n\n}\n\n")])])])]),t._v(" "),s("li",[s("p",[t._v("构件好docker-compose.yml配置文件,注意这里的版本和你下载的nginx配置文件版本要一致")]),t._v(" "),s("div",{staticClass:"language-yml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# yaml 配置实例")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3.7'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("my-nginx-test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.23.4 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 自定义镜像名:tag名")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" my"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("test "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器名")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"80:80"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restart")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" always\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这里的./意味着映射的目录是当前yml配置文件的上级目录下的目录")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/usr/share/nginx/html\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./conf/nginx.conf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/etc/nginx/nginx.conf\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./conf.d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/etc/nginx/conf.d\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./logs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/var/log/nginx\n\n")])])])]),t._v(" "),s("li",[s("p",[t._v("然后在服务器上建四个目录,其实还应该多建一个放SSL证书的映射目录")]),t._v(" "),s("ul",[s("li",[t._v("/docker-compose/nginx；并将自定义的docker-compose.yml复制到当前文件夹下")]),t._v(" "),s("li",[t._v("/docker-compose/nginx/conf；并将自定义的nginx.conf复制到当前文件夹下")]),t._v(" "),s("li",[t._v("/docker-compose/nginx/conf.d")]),t._v(" "),s("li",[t._v("/docker-compose/nginx/html")])])]),t._v(" "),s("li",[s("p",[t._v("然后直接执行"),s("code",[t._v("docker-compose up -d")])])]),t._v(" "),s("li",[s("p",[t._v("如果修改了nginx的配置文件就执行"),s("code",[t._v("docker-compose up -d --force-recreate")])])]),t._v(" "),s("li",[s("p",[t._v("如果修改了docker-compose.yml就执行"),s("code",[t._v("docker-compose up --build -d")])])])]),t._v(" "),s("h2",{attrs:{id:"部署多套前端项目到同一个docker中的nginx"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#部署多套前端项目到同一个docker中的nginx"}},[t._v("#")]),t._v(" 部署多套前端项目到同一个docker中的nginx")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("大概看了下教程,其实很简单")])]),t._v(" "),s("li",[s("p",[t._v("要部署多套前端就需要多个存放dist文件的目录,这个目录可以分开创建然后分别映射到docker内部,也可以映射一个目录进去然后在这个目录里再建多个目录存放不同项目")])]),t._v(" "),s("li",[s("p",[t._v("比如我创建一个"),s("code",[t._v("/root/lzc/software/nginx/app1")]),t._v("和"),s("code",[t._v("/root/lzc/software/nginx/app2")]),t._v("目录,并且映射到docker内部")]),t._v(" "),s("div",{staticClass:"language-yml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这里的./意味着映射的目录是当前yml配置文件的上级目录下的目录")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /root/lzc/software/nginx/app1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/usr/share/nginx/html/app1\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /root/lzc/software/nginx/app2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/usr/share/nginx/html/app2\n")])])])]),t._v(" "),s("li",[s("p",[t._v("然后修改nginx的配置文件,nginx.conf")]),t._v(" "),s("div",{staticClass:"language-ini extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ini"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#基础的单个前端项目时候,nginx的server配置块下,是这么写的")]),t._v("\nlocation / {\nroot   /usr/share/nginx/html;\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#匹配不到资源路径的时候，先去读取index.html，然后再路由")]),t._v("\ntry_files $uri $uri/ /index.html last;\nindex  index.html index.htm;\n}\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#修改之后就在server下分多个写,不同之处就是location后面的目录由/变为了/不同前端项目静态文件存储目录比如/app1")]),t._v("\nlocation /dist1 {\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 网站根目录，此处使用容器内的路径")]),t._v("\nroot /usr/share/nginx/html;\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 默认首页")]),t._v("\nindex index.html;\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 尝试从磁盘找到请求的文件，如果不存在则跳转到 index.html")]),t._v("\ntry_files $uri $uri/ /dist1/index.html;\n}\nlocation /dist2 {\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 网站根目录，此处使用容器内的路径")]),t._v("\nroot /usr/share/nginx/html;\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 默认首页")]),t._v("\nindex index.html;\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 尝试从磁盘找到请求的文件，如果不存在则跳转到 index.html")]),t._v("\ntry_files $uri $uri/ /dist2/index.html;\n}\n")])])])]),t._v(" "),s("li",[s("p",[t._v("如果是映射一个"),s("code",[t._v("/root/lzc/software/nginx/html")]),t._v("目录进去,然后在宿主机的这个目录下再建app1和app2两个目录也可以,修改配置文件基本是一样的操作,唯一的区别就是docker-compose.yml写的稍微有点区别")]),t._v(" "),s("div",{staticClass:"language-yml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这里的./意味着映射的目录是当前yml配置文件的上级目录下的目录")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /root/lzc/software/nginx/html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/usr/share/nginx/html\n")])])])]),t._v(" "),s("li",[s("p",[t._v("经过我实践之后,我发现应该改成下面这样")])]),t._v(" "),s("li",[s("p",[t._v("root代表你定义的根目录,而你写的location指的是访问你服务器地址的后缀,本身访问你服务器地址就是"),s("code",[t._v("http:://+你的ip")]),t._v(",类似"),s("code",[t._v("http://127.0.0.1")]),t._v(",现在你配置了location,别人访问就得是"),s("code",[t._v("http:://+你的ip+/location定义的值")]),t._v(",类似"),s("code",[t._v("http://127.0.0.1/manage")])])]),t._v(" "),s("li",[s("p",[t._v("然后如果你写了try_files这行,你应该在这里添加你写好的/location,而不是加在你配置的location下面的root后面")])]),t._v(" "),s("li",[s("p",[t._v("root就像是你公司大楼,location就是你的具体工位,如果你把root改成你的具体工位,那找你的人看到你的地址就会是工位重复两次")])]),t._v(" "),s("li",[s("p",[t._v("其他的都和预想的一样,先去之前映射进nginx容器的文件夹的html文件夹下创建不同前端项目的新目录,然后放文件进去,修改了nginx配置文件的话就docker重启一下即可,就可以正常访问前端页面,前提是前端项目配置不出问题")])]),t._v(" "),s("li",[s("div",{staticClass:"language-ini extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ini"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#现在分为两个前端项目")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#后台")]),t._v("\nlocation /manage {\nroot   /usr/share/nginx/html;\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#匹配不到资源路径的时候，先去读取index.html，然后再路由")]),t._v("\ntry_files $uri $uri/ /manage/index.html last;\nindex  index.html index.htm;\n}\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#客户端")]),t._v("\nlocation /customer {\nroot   /usr/share/nginx/html;\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#匹配不到资源路径的时候，先去读取index.html，然后再路由")]),t._v("\ntry_files $uri $uri/ /customer/index.html last;\nindex  index.html index.htm;\n}\n")])])])])]),t._v(" "),s("h2",{attrs:{id:"扩展为https项目"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#扩展为https项目"}},[t._v("#")]),t._v(" 扩展为HTTPS项目")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("需要在宿主机的nginx目录下再创建一个certs文件夹(起名随意),然后映射到docker内部的"),s("code",[t._v("/etc/nginx/certs")]),t._v("目录")])]),t._v(" "),s("li",[s("p",[t._v("修改nginx.conf文件，将listen 80改为listen 443 ssl，并添加以下两行，指定证书文件的路径：")]),t._v(" "),s("div",{staticClass:"language-ini extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ini"}},[s("code",[t._v("ssl_certificate /etc/nginx/certs/fullchain.pem;\nssl_certificate_key /etc/nginx/certs/privkey.pem;\n")])])])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"https://cloud.tencent.com/developer/article/1665969",target:"_blank",rel:"noopener noreferrer"}},[t._v("重新启动docker-compose"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" down\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" up -d\n")])])])]),t._v(" "),s("li",[s("p",[t._v("访问 https://localhost/dist1 或者 https://localhost/dist2 来访问部署的前端项目。")])])]),t._v(" "),s("h2",{attrs:{id:"十万个为什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#十万个为什么"}},[t._v("#")]),t._v(" 十万个为什么")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("nginx的配置文件中,root写在server下和写在location下各自代表什么含义,有什么区别")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("根据我从网络上搜索到的信息，nginx的root配置可以写在server或location下，它们的区别主要在于nginx如何解释location后面的uri，这会使两者分别以不同的方式将请求映射到服务器文件上")])]),t._v(" "),s("li",[s("p",[t._v("一般来说，root写在server下表示为该server指定一个默认的根路径，所有的location都会继承这个路径，除非在location下重新定义root。而root写在location下表示为该location指定一个特定的根路径，这个路径会与location后面的uri拼接起来形成完整的文件路径")])]),t._v(" "),s("li",[s("p",[t._v("举个例子，假设有如下配置：")]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v(" /data/www")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v(" /data/html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("那么当访问"),s("code",[t._v("http://example.com/index.html")]),t._v("时，nginx会去寻找"),s("code",[t._v("/data/html/index.html")]),t._v("这个文件。而当访问"),s("code",[t._v("http://example.com/img/logo.png")]),t._v("时，nginx会去寻找"),s("code",[t._v("/data/www/img/logo.png")]),t._v("这个文件。可以看出，root写在location / 下会覆盖server下的root设置")])])])]),t._v(" "),s("li",[s("p",[t._v("proxy_pass处做反向代理有什么意义")]),t._v(" "),s("ul",[s("li",[t._v("你提到的proxy_pass处做反向代理有什么意义，我可以给你一些解释。反向代理的意义有以下几点：\n"),s("ul",[s("li",[t._v("可以隐藏后端服务器的真实地址，提高安全性和可靠性。")]),t._v(" "),s("li",[t._v("可以实现负载均衡，根据不同的策略将请求分发给不同的后端服务器，提高性能和可用性。")]),t._v(" "),s("li",[t._v("可以实现缓存和压缩，将后端服务器返回的响应缓存到本地文件或内存中，或者对响应进行压缩，减少网络传输量和延迟。")]),t._v(" "),s("li",[t._v("可以实现动静分离，将静态资源和动态资源分别交给不同的服务器处理，提高效率和稳定性。")])])])])]),t._v(" "),s("li",[s("p",[t._v("nginx中的proxy_pass反向代理的配置规则具体是如何的")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("nginx中的proxy_pass反向代理的配置规则具体是如何的，我可以给你一些例子说明。proxy_pass指令用于设置后端代理服务器的地址和协议，还可以附加可选的URI映射。proxy_pass的配置规则主要取决于location和URL是否以/结尾：")]),t._v(" "),s("ul",[s("li",[t._v("如果location和URL都不以/结尾，那么nginx会将location匹配的部分保留在代理URI中。例如：")])]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /api")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_pass")]),t._v(" http://127.0.0.1:8080")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("如果访问"),s("code",[t._v("/api/user")]),t._v("，那么后端的URI为"),s("code",[t._v("http://127.0.0.1:8080/api/user")]),t._v("。")]),t._v(" "),s("ul",[s("li",[t._v("如果location不以/结尾，但URL以/结尾，那么nginx会将location匹配的部分替换为URL中的/。例如：")])]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /api")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_pass")]),t._v(" http://127.0.0.1:8080/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("如果访问"),s("code",[t._v("/api/user")]),t._v("，那么后端的URI为"),s("code",[t._v("http://127.0.0.1:8080/user")]),t._v("。")]),t._v(" "),s("ul",[s("li",[t._v("如果location以/结尾，但URL不以/结尾，那么nginx会将location匹配的部分加上URL中的路径作为代理URI。例如：")])]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /api/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_pass")]),t._v(" http://127.0.0.1:8080/v1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("如果访问"),s("code",[t._v("/api/user")]),t._v("，那么后端的URI为"),s("code",[t._v("http://127.0.0.1:8080/v1/user")]),t._v("。")]),t._v(" "),s("ul",[s("li",[t._v("如果location和URL都以/结尾，那么nginx会将location匹配的部分加上URL中的路径作为代理URI。例如：")])]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /api/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_pass")]),t._v(" http://127.0.0.1:8080/v1/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("如果访问"),s("code",[t._v("/api/user")]),t._v("，那么后端的URI为"),s("code",[t._v("http://127.0.0.1:8080/v1/user")]),t._v("。")])])])]),t._v(" "),s("li",[s("p",[t._v("后端springboot模块开发,前端vue2开发,在配置nginx上,前端和后端需要怎样配合")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("后端springboot模块开发，前端vue2开发，在配置nginx上，前端和后端需要怎样配合，我可以给你一些建议。一般来说，前端和后端需要遵循以下原则：")]),t._v(" "),s("ul",[s("li",[t._v("前端需要将vue项目打包成静态资源文件，放在nginx的html目录下，或者其他指定的目录下。")]),t._v(" "),s("li",[t._v("后端需要将springboot项目打包成jar文件，放在服务器上，并运行在指定的端口上。")]),t._v(" "),s("li",[t._v("nginx需要配置反向代理，将不同的请求路径代理到不同的后端服务器上，或者同一个后端服务器的不同端口上。")]),t._v(" "),s("li",[t._v("nginx还需要配置跨域访问，允许前端请求后端的接口，或者使用CORS机制在后端设置响应头。")]),t._v(" "),s("li",[t._v("nginx还可以配置负载均衡，缓存，压缩等功能，提高性能和可用性。")])])]),t._v(" "),s("li",[s("p",[t._v("具体分别举一些实例")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("具体分别举一些实例，我可以给你一些参考。反向代理和跨域访问的实例有以下几种：")]),t._v(" "),s("ul",[s("li",[t._v("反向代理的实例：假设有一个前端项目运行在nginx的80端口，需要访问后端的8080端口，可以在nginx的配置文件中添加如下的location块：")])]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /api/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_pass")]),t._v(" http://127.0.0.1:8080/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("这样，当前端请求"),s("code",[t._v("/api/user")]),t._v("时，nginx会将请求代理到"),s("code",[t._v("http://127.0.0.1:8080/user")]),t._v("，从而实现反向代理。")]),t._v(" "),s("ul",[s("li",[t._v("跨域访问的实例：假设有一个前端项目运行在nginx的80端口，需要访问另一个域名的后端接口，可以在nginx的配置文件中添加如下的location块：")])]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /api/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_pass")]),t._v(" http://other.com/api/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add_header")]),t._v(" Access-Control-Allow-Origin *")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add_header")]),t._v(" Access-Control-Allow-Methods GET,POST,PUT,DELETE,OPTIONS")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add_header")]),t._v(" Access-Control-Allow-Headers Content-Type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("这样，当前端请求"),s("code",[t._v("/api/user")]),t._v("时，nginx会将请求代理到"),s("code",[t._v("http://other.com/api/user")]),t._v("，并在响应头中添加跨域访问的相关信息，从而实现跨域访问。")])])])])])])])])}),[],!1,null,null,null);n.default=e.exports}}]);