(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{493:function(s,t,e){"use strict";e.r(t);var a=e(65),n=Object(a.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"redis笔记"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redis笔记"}},[s._v("#")]),s._v(" Redis笔记")]),s._v(" "),e("h2",{attrs:{id:"安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[s._v("#")]),s._v(" 安装")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("环境是在阿里云计算型c7,centos7.9版本服务器上")])]),s._v(" "),e("li",[e("p",[s._v("我选择使用docker安装")])]),s._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://blog.csdn.net/weixin_40461281/article/details/111291847",target:"_blank",rel:"noopener noreferrer"}},[s._v("安装教程"),e("OutboundLink")],1)])]),s._v(" "),e("li",[e("p",[s._v("简略说一下就是")])]),s._v(" "),e("li",[e("p",[s._v("首先创建好文件夹,在服务器上创建redis文件夹,其中再创建data,conf两个文件夹")])]),s._v(" "),e("li",[e("p",[s._v("写好配置文件直接上传到conf文件夹里")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 修改连接为所有ip")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("bind")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 允许外网访问")]),s._v("\nprotected-mode "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("yes")]),s._v("\nport "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("timeout")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# RDB存储配置")]),s._v("\nsave "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("900")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\nsave "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("300")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\nsave "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("60")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("10000")]),s._v("\nrdbcompression "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("yes")]),s._v("\ndbfilename dump.rdb\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 数据存放位置")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("dir")]),s._v(" /data\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 开启aof配置")]),s._v("\nappendonly "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("yes")]),s._v("\nappendfsync everysec\nappendfilename "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"appendonly.aof"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置密码")]),s._v("\nrequirepass shineray9527\n")])])])]),s._v(" "),e("li",[e("p",[s._v("写好docker-compose配置文件")]),s._v(" "),e("div",{staticClass:"language-yml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yml"}},[e("code",[s._v("  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("redis6.0-test")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 镜像名")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" redis"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("6.2.6\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 容器名")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("container_name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" redis6.0"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("test\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重启策略")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("restart")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" always\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 权限")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("privileged")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[s._v("true")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 端口映射")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"6379:6379"')]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("environment")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置环境变量 时区上海 编码UTF-8")]),s._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("TZ")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Asia/Shanghai\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("LANG")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" en_US.UTF"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("command")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"redis-server"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/redis.conf"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 配置文件")]),s._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" /root/software/redis6.0"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("test/conf/redis.conf"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/redis.conf"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("rw\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 数据文件")]),s._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" /root/software/redis6.0"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("test/data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("rw\n")])])])]),s._v(" "),e("li",[e("p",[s._v("然后服务器中cd到具体的docker-compose配置文件目录")])]),s._v(" "),e("li",[e("p",[s._v("运行"),e("code",[s._v("docker-compose --compatibility up")]),s._v(",如果文件重命名了就执行"),e("code",[s._v("docker-compose -f 配置文件名.yml --compatibility up")])])]),s._v(" "),e("li",[e("p",[s._v("之后不要忘了去阿里云安全组里配置"),e("strong",[s._v("开启对应的端口")])])]),s._v(" "),e("li",[e("p",[s._v("要记得在服务器上创建的文件夹,以及配置文件的权限都要设置到最大,不然会出现一些无法存储的错误(不一定)")])]),s._v(" "),e("li",[e("p",[s._v("一定要添加"),e("code",[s._v('command: ["redis-server","/redis.conf"]')]),s._v("这一行,才会让redis认定我们自己设置的配置文件,不然你"),e("strong",[s._v("配置文件里设置的一切包括密码都不起作用")])])]),s._v(" "),e("li",[e("p",[s._v("一定不要把服务器的6379作为redis的端口号还不设置密码,这样会导致别人黑进来")])]),s._v(" "),e("li",[e("p",[s._v("一旦报错"),e("code",[s._v("WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect")]),s._v(",则修改yml配置为"),e("code",[s._v('command: sh -c "apt-get update && apt-get install -y procps && sysctl vm.overcommit_memory=1 && redis-server /redis.conf"')])])])]),s._v(" "),e("blockquote",[e("p",[s._v("这个日志的意思是，你的Linux系统的内存分配策略是overcommit_memory=0，这表示系统会检查是否有足够的可用内存供应用进程使用，如果没有，就会拒绝分配内存，可能导致进程异常。Redis在后台保存数据时，需要创建一个子进程来执行fork操作，这时候如果系统内存不足，就会出现失败的情况")]),s._v(" "),e("p",[s._v("你可以通过以下方法来解决这个问题：")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("修改/etc/sysctl.conf文件，添加一行vm.overcommit_memory = 1，然后重启系统或者执行命令sysctl vm.overcommit_memory=1来使设置生效。这样可以让系统内存分配策略变为overcommit_memory=1，表示系统不检查内存是否足够，永远允许分配内存，不管当前的内存状态如何。这样可以避免Redis后台保存失败的问题，但是也会增加OOM killer出现的可能，当系统内存真的不足时，可能会杀死一些进程来释放内存。")])]),s._v(" "),e("li",[e("p",[s._v("另一种方法是修改/etc/sysctl.conf文件，添加一行vm.overcommit_ratio = 80（可以根据你的系统内存使用情况适当调整），然后重启系统或者执行命令sysctl vm.overcommit_ratio=80来使设置生效。这样可以让系统内存分配策略变为overcommit_memory=2，表示系统允许分配的内存超过物理内存和swap的总和的百分比由overcommit_ratio决定。这样可以让系统更合理地分配内存，避免过度分配也避免无法分配。")])]),s._v(" "),e("li",[e("p",[s._v("对于overcommit_memory的警告，你可以在docker-compose文件中添加privileged选项，来让容器拥有更多的权限。然后，你可以在容器启动时执行命令sysctl vm.overcommit_memory=1来设置内存分配策略。比如：")])])]),s._v(" "),e("div",{staticClass:"language-yml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("redis")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" redis"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("alpine\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("privileged")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[s._v("true")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("command")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" sh "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v('c "sysctl vm.overcommit_memory=1 '),e("span",{pre:!0,attrs:{class:"token important"}},[s._v("&&")]),s._v(" redis"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v('server"\n')])])]),e("p",[s._v("但是我这样做重启之后再看redis日志,还是一样的报错,可能的原因是，你使用docker-compose restart命令重启了redis，但是这个命令并不会重新加载docker-compose.yml配置文件，所以你的sysctl命令没有生效。你可以尝试使用"),e("strong",[s._v("docker-compose down")]),s._v("和"),e("strong",[s._v("docker-compose up -d")]),s._v("命令来停止并重新启动你的容器，这样就可以应用你的配置文件的变化")]),s._v(" "),e("p",[s._v("结果我这样做了,确实重启了,但是会报错:sysctl: not found sh")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("可能的原因是，你的redis容器中没有sysctl命令，或者sysctl命令无法正常执行。你可以尝试以下方法来解决这个问题：")])]),s._v(" "),e("li",[e("p",[s._v("检查你的redis容器中是否有sysctl命令，你可以使用docker exec -it redis sh命令进入容器的shell，然后使用which sysctl或者type sysctl来查看sysctl命令的位置和类型。如果没有找到sysctl命令，你可能需要安装procps包来提供sysctl命令。你可以使用apt-get update && apt-get install -y procps命令来安装procps包，或者在你的Dockerfile中添加这个命令。")])])]),s._v(" "),e("p",[s._v("我进入到容器中,结果:# which sysctl # type sysctl sysctl: not found 我想在docker-compose.yml中通过配置解决这个问题")]),s._v(" "),e("ul",[e("li",[s._v("如果你想在docker-compose.yml中通过配置解决这个问题，你可以尝试以下方法：\n"),e("ul",[e("li",[s._v("在你的Dockerfile中添加一行RUN apt-get update && apt-get install -y procps，来安装procps包，然后重新构建你的redis镜像。这样就可以在容器中提供sysctl命令。")]),s._v(" "),e("li",[s._v("在你的docker-compose.yml文件中添加一行command: sh -c “apt-get update && apt-get install -y procps && sysctl vm.overcommit_memory=1 && redis-server”，来在容器启动时安装procps包并执行sysctl命令。这样就可以避免修改Dockerfile和重新构建镜像。")])])])]),s._v(" "),e("p",[s._v("经过尝试这样确实可以了,但是要小心踩坑,因为new bing给出的答案里,引号不是英文符号,需要修改,并且我们需要指定配置文件,所以需要加上 "),e("code",[s._v("/redis.conf")]),s._v(",所以最终的配置是这样的**"),e("code",[s._v('command: sh -c "apt-get update && apt-get install -y procps && sysctl vm.overcommit_memory=1 && redis-server /redis.conf"')]),s._v("**")])])])}),[],!1,null,null,null);t.default=n.exports}}]);