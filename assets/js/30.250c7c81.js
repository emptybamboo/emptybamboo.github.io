(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{447:function(t,a,s){"use strict";s.r(a);var n=s(65),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"第一天-p5-p7-p11"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第一天-p5-p7-p11"}},[t._v("#")]),t._v(" 第一天,p5,p7-p11")]),t._v(" "),s("ul",[s("li",[t._v("教程来自"),s("a",{attrs:{href:"https://www.bilibili.com/video/av47953244/?p=1",target:"_blank",rel:"noopener noreferrer"}},[t._v("b站"),s("OutboundLink")],1)])]),t._v(" "),s("h3",{attrs:{id:"加载前端控制器去加载springmvc的控制文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#加载前端控制器去加载springmvc的控制文件"}},[t._v("#")]),t._v(" 加载前端控制器去加载SpringMVC的控制文件.")]),t._v(" "),s("ul",[s("li",[t._v("在web.xml中配置好"),s("code",[t._v("<load-on-startup>1</load-on-startup>")]),t._v("后,Servlet这个类就第一次发请求的时候才创建,这个标签的意思是以后就可以启动服务器就可以区创建这个DispatcherServlet对象.")]),t._v(" "),s("li",[t._v("Servelt一旦创建就可以帮你加载SpringMVC的配置文件,SpringMVC配置文件一加载,这个配置文件中的开启注解扫描就生效,")]),t._v(" "),s("li",[t._v("扫描一生效Controller类就被扫到,它就变成对象,Controller中的注解就都生效了,前端一发请求,Controller中的方法就可以正常执行了")])]),t._v(" "),s("h3",{attrs:{id:"mvc如何跳转"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mvc如何跳转"}},[t._v("#")]),t._v(" MVC如何跳转")]),t._v(" "),s("ul",[s("li",[t._v("Controller的方法中return的字符串(比如index),SpringMVC默认认为它是当前jsp文件的名字.就需要提供这么一个jsp文件(比如index.jsp).")]),t._v(" "),s("li",[t._v("如何去找?去SpringMVC中配置一个视图解析器")])]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("bean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("随便起"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("InternalResourceViewResolver"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("bean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("`\n")])])]),s("ul",[s("li",[t._v("这个类(class)就是视图解析器,想跳页面,底层就会用视图解析器帮你跳转到指定页面,但是需要在这个标签里面配两个参数.\n"),s("ol",[s("li",[t._v("第一个是前缀,意思就是在这个文件夹路径底下找某某文件")]),t._v(" "),s("li",[t._v("第二个就是文件后缀,在上面的文件目录下找xxx.jsp文件.")])])])]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("property")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("prefix"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("/WEB-INF/pages/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("property")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("suffix"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v(".jsp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])]),s("ul",[s("li",[t._v("视图解析器配置完之后,以后Controller方法中return的字符串,比如index,视图解析器就会找/WEB-INF/pages/这个目录下的jsp结尾的文件.")]),t._v(" "),s("li",[t._v('前端写相对路径即可和后端互动,前端发请求就可以执行@RequestMapping(path="/hello"),这个hello的方法,相对路径写法如下'),s("code",[t._v('<a href="hello" />')]),t._v(".")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("其实handler指的就是controller\n"),s("code",[t._v("<mvc:annotation-driven>")]),t._v("配置在springmvc配置文件中后,自动加载RequsetMappingHandlerMappring(处理映射器),和RequestMappringHandlerAdapter(处理适配器)")])]),t._v(" "),s("h3",{attrs:{id:"requestmappring注解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#requestmappring注解"}},[t._v("#")]),t._v(" @RequestMappring注解")]),t._v(" "),s("h4",{attrs:{id:"作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#作用"}},[t._v("#")]),t._v(" 作用")]),t._v(" "),s("ul",[s("li",[t._v("用于建立请求URL和处理请求方法之间的对应关系.")]),t._v(" "),s("li",[t._v("注解可以放到类上也可以放到方法上,加入你请求的目录的/user/hello,,放到类上可以注解一级目录比如/user,注解在方法上代表注解了二级目录,比如/hello.")]),t._v(" "),s("li",[t._v('假如真的在Controller里写了两级目录,比方说类上加了/user,方法再加个/hello之类的,拿前端请求的时候href里写的路径就要变为"/user/hello",只写"/hello"会404')])]),t._v(" "),s("h4",{attrs:{id:"属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#属性"}},[t._v("#")]),t._v(" 属性")]),t._v(" "),s("ul",[s("li",[t._v("path和value作用相同,都是指映射路径")]),t._v(" "),s("li",[t._v('如果你写好了注解写属性,属性名是value,而且只写一个属性,value属性可以省略不写,如果写多个属性,那value就不能省略了(比如value="/index",method="get").')])]),t._v(" "),s("hr"),t._v(" "),s("ul",[s("li",[t._v("属性method是一个数组,使用的时候是method={RequsetMethod.GET/POST},代表的是,当前这个方法可以接收什么样的请求方式.超链接一定会发送get请求.")]),t._v(" "),s("li",[t._v("method是一个枚举类,如果是枚举类,那用类名.属性就可以拿到里面的值了,就可以这样设置请求方式.比如@RequsetMappring(method={RequsetMethod.POST}),就代表以后这个方法的请求方式必须是POST方式.")]),t._v(" "),s("li",[t._v("如果像这样设置为POST,再从默认是GET的超链接里访问这个方法,那就报405")])]),t._v(" "),s("hr"),t._v(" "),s("ul",[s("li",[t._v('param也是一个数组,使用的时候是param={},类型是字符串,也就是说写的时候param={"uername"}.')]),t._v(" "),s("li",[t._v("如果真的像上面往里写一个username,代表你请求我这个方法的时候,比如给我传一个username的属性,不传这个方法就不执行.报400,bad request.")]),t._v(" "),s("li",[t._v("怎么传呢?"),s("code",[t._v('<a href="user/hello?username=haha" />')]),t._v(",传这种参数第一个用问号隔开,之后的每个都用&隔开.你传什么值没关系,必须有属性,而且名字必须叫username.")]),t._v(" "),s("li",[t._v('如果controller方法里写的时候param={"uername=heiheihei"},页面上传username属性也必须传值为嘿嘿.')])]),t._v(" "),s("hr"),t._v(" "),s("ul",[s("li",[t._v('headers, 比如加了一个headers={"Accept"},说明你发请求必须包含这个Accept请求头,如果不包含这个方法不执行.')]),t._v(" "),s("li",[t._v("后两个用的比较少(params,hearders),前俩用的很多")])]),t._v(" "),s("h3",{attrs:{id:"请求参数绑定入门"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#请求参数绑定入门"}},[t._v("#")]),t._v(" 请求参数绑定入门")]),t._v(" "),s("ul",[s("li",[t._v("作为一个web框架,客户端发请求过来一定会携带请求参数,就是把数据传过来,那就需要我们把数据拿到,拿到的过程就叫请求参数的绑定.")]),t._v(" "),s("li",[t._v("表单提交数据都是键值对,比如username=hehe.")]),t._v(" "),s("li",[t._v("比如前段传过来的是username=hehe&password=123")]),t._v(" "),s("li",[t._v("你把这个传过来,SpringMVC框架会这样做,Controller里的方法中加参数,sayHello(String username,String password).")]),t._v(" "),s("li",[t._v("如果在方法上加这么俩参数,而且参数名字和表单提交名称写的一模一样,那MVC这个框架就自动把你传的值赋值到这个方法的参数上,这就是请求参数的绑定.当然这个传过来之后可以在方法中使用.")]),t._v(" "),s("li",[t._v("请求参数支持的数据类型\n"),s("ol",[s("li",[t._v("基本数据类型和字符串类型")]),t._v(" "),s("li",[t._v("实体类型(JavaBean)")]),t._v(" "),s("li",[t._v("集合数据类型(List,map集合等)")])])])]),t._v(" "),s("h3",{attrs:{id:"请求参数绑定实体类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#请求参数绑定实体类"}},[t._v("#")]),t._v(" 请求参数绑定实体类")]),t._v(" "),s("ul",[s("li",[t._v("在前端写一个表单form,其中有姓名/密码/金额可以输入,一个提交按钮.form标签的action写的就是controller中的一级二级目录,比如"),s("code",[t._v('action="param/saveAccount"')]),t._v(",method写个post")]),t._v(" "),s("li",[t._v("写完之后问题来了,第一个是表单的每个数据标签中的name属性该写啥数据.记住原则,入门中讲到,controller中形参String username和表单中"),s("code",[t._v('<a href="user/hello?username=haha" />')]),t._v("的username应该是相同的,现在如果提交表单,后台往一个类中封装,要求name和javaBean属性相同,它会根据标签中这个name找属性的set方法,如果写的不一样.set方法就找不到,找不到数据就没法封装.")]),t._v(" "),s("li",[t._v("Account类中有这三个属性.")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Account")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Serializable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" username"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" password"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Double")]),t._v(" money"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("这样的话在Controller的saveAccount方法的形式参数中就应该写Account account对象类,写了这个提交表单数据就默认全部会被封装到account这个对象当中.")])]),t._v(" "),s("hr"),t._v(" "),s("ul",[s("li",[t._v("account中可能有一个不一般的类型,比如一个User类型,说明account中包含一个引用类型,如果是一个引用类型,怎么给User属性传值呢?")]),t._v(" "),s("li",[t._v("表单封装属性,这三个属性(username/password/money)应该是往account这个类这三个属性上封装,但是account里还有一个User属性.那表单能不能提交数据往这个User属性里封装呢?")]),t._v(" "),s("li",[t._v('和user相关的属性标签里的name就该写成name="user.uname"这种形式(uname是User类中属性).')]),t._v(" "),s("li",[t._v("前端表单代码如下:")])]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("form")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("action")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("param/saveAccount"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("method")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("post"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        姓名："),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("username"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("br")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n        密码："),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("password"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("br")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n        金额："),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("money"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("br")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n        用户姓名："),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("user.uname"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("br")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n        用户年龄："),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("user.age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("br")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("submit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("提交"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("form")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);