(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{491:function(t,s,a){"use strict";a.r(s);var n=a(65),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"拼接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#拼接"}},[t._v("#")]),t._v(" 拼接")]),t._v(" "),a("ul",[a("li",[t._v("MYSQL语句将查询的数据用字符拼接")])]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$discount")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sqlQueryAll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v("\"select group_concat(ratio SEPARATOR ';') as ratios  from discount where journeyId = '"),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'id'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("'\"")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ul",[a("li",[t._v("因为这样查出来想取出数据的话,必须要"),a("code",[t._v("$discount['group_concat(ratio SEPARATOR ';')']")]),t._v(",但是单引号里不能再有单引号,所以就用as取个别名")])]),t._v(" "),a("hr"),t._v(" "),a("ul",[a("li",[a("p",[t._v("现在卖车票,顾客可一次买多张,买多张的同时,其实生成个多个订单,但是这多个订单有相同的订单号.")])]),t._v(" "),a("li",[a("p",[t._v("现在需要把这多个订单的出发到达具体地点,出发具体时间,上车地点,以及总价查询出来.")])]),t._v(" "),a("li",[a("p",[t._v("同时还要给前端传递相同订单号的订单有几个,那么这种时候就需要在SQL语句中嵌套小的SQL语句.")])]),t._v(" "),a("li",[a("p",[t._v("但是要注意,在想拼接一次查询的多个订单号相同的订单ID的时候,需要使用"),a("code",[t._v("GROUP_CONCAT")]),t._v("函数而不是"),a("code",[t._v("concat")])])]),t._v(" "),a("li",[a("p",[t._v("否则就会出现报错"),a("code",[t._v("#1242 - Subquery returns more than 1 row")]),t._v(",因为一次查一条,concat确是要拼接多条,数据行数就有问题")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("startTime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("journeyTime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("workFlow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \nj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("oneType"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("originRegion"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("endRegion"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("originStation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("endStation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("address"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("buyCarNum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("COUNT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" buyCar "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" bu \n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" bu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("buyCarNum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("buyCarNum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" GROUP_CONCAT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("buy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" buyCar "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" buy \n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" buy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("buyCarNum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("buyCarNum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" ids"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("buyc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("money"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" buyCar "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" buyc \n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" buyc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("buyCarNum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("buyCarNum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" money\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" buyCar "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" b \n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("left")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" journey "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("journeyId "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id \n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("left")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" baseLine "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" ba "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("baseLineId "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ba"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("left")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" stationAndPrice "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" s "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" ba"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("baseLineId "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("khid "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{$post['")]),t._v("khid"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("']}'")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GROUP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("buyCarNum\n")])])])])]),t._v(" "),a("h2",{attrs:{id:"去重"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#去重"}},[t._v("#")]),t._v(" 去重")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("MYSQL去重,使用group,假如你表格展示要求从一级站点到二级出发到达站点,到三级出发到达站点这条路线必须合并为一条数据,那就group by这五个参数,使用逗号隔开.")])]),t._v(" "),a("li",[a("p",[t._v("如果在去重的同时还要把按规律重复的多条数据某些字段相加统计,就直接在select后面加上sum(统计字段)即可.不用多余的操作.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("oneType"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("originRegion"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("endRegion"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("originStation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("endStation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("startTime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("reserveNum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("money"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" buyCar "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("left")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" journey "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("journeyId "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("group")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("oneType"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("originRegion"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("endRegion"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("originStation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("endStation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("startTime\n")])])])]),t._v(" "),a("li",[a("p",[t._v("同时要注意,"),a("strong",[t._v("where一定要放在group by前面")])])])]),t._v(" "),a("h2",{attrs:{id:"if函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#if函数"}},[t._v("#")]),t._v(" if函数")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("如果一个表中有两个外键ID,一个是用户ID,一个是司机ID,你现在要做一个统计,这两类人都要统计,所以情况就是一条数据中这两个ID必有一个为空一个不为空.")])]),t._v(" "),a("li",[a("p",[t._v("那么在排重的时候本来我们group by后面应该是多个字段用逗号隔开,但是如果这样就成了用户ID和司机ID唯一组合排重了.")])]),t._v(" "),a("li",[a("p",[t._v("这样的话就要用到MYSQL中的"),a("code",[t._v("if函数")]),t._v(".")])]),t._v(" "),a("li",[a("p",[t._v("if函数类似于JAVA,PHP中的三元运算符,if(one,two,three),one的结果如果为true,那么这个函数的值为two,否则为three.")])]),t._v(" "),a("li",[a("p",[t._v("这样的话当司机ID为空时,就用客户ID去排重,反之就用司机ID排重,这样应该就可以解决问题了")])]),t._v(" "),a("li",[a("p",[t._v("最终语句如下")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" w"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("w"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("w"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("phone"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("w"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("time")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("w"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("money"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" moneyCount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bindBankCard "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" driverBank"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bankCardNum "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" driverCar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nk"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bindBankCard "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" kehuBank"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nk"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bankCardNum "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" kehuCar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("w"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("driverId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("w"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("khid\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" withdraw "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" w "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("left")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" driver "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" d "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" w"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("driverId "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("left")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" kehu "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" k "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" w"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("khid "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("khid \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('".$where.$time.$type."')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" w"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("workFlow "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'已通过'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("group")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("w"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("driverId"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("w"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("driverId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("w"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("khid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])]),t._v(" "),a("h2",{attrs:{id:"union"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#union"}},[t._v("#")]),t._v(" union")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("同时根据一个id去查询两个表的数据,再展示到一个表格.")])]),t._v(" "),a("li",[a("p",[t._v("比如有一个针对单个司机的支出记录,同时有两种情况,一种是司机提现,公司所支出的钱,一种是车票分成公司所支出的钱,把这两种情况写进一个表格中,就需要一个比较复杂的SQL语句.")])]),t._v(" "),a("li",[a("p",[t._v("提现表withdraw中有两种id,一种是乘客id,一种是司机id,当其中一种id为空,另一种必不为空,不为空的id就代表了这条提现记录是什么身份的人进行的.")])]),t._v(" "),a("li",[a("p",[t._v("而关于车费划分的部分,就是从订单表出发,订单表buyCar中有车程ID:journeyId,通过车程ID可以拿到车程,车程中有对应的司机ID,通过司机ID拿到司机数据,司机数据中有是否划分车费,如果是,就去拿划分比例.最后拿划分比例乘以订单的车票费用就是划分给司机的钱.")])]),t._v(" "),a("li",[a("p",[t._v("表格中同时还要显示支出类型,所以直接在查询提现这里写好"),a("code",[t._v("'提现支出' as type")]),t._v(",在划分那里写好"),a("code",[t._v("'车费划分' as type")]),t._v(",查询完数据库往出取即可对应.")])]),t._v(" "),a("li",[a("p",[t._v("这里使用了union all,可以连接两句查询语句,但是要注意select后跟的查询结果数量顺序必须完全相同,当然你可以不同,只要你as 给不同名的字段起同名也就可以了.")])]),t._v(" "),a("li",[a("p",[t._v("而且union all连接的两句SQL语句的where判断也是各自判断的,不是写在最后就可以进行两句共同的判断,需要在每个句子的屁股后面加分别属于各自的where判断.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" w"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("money "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" money"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'提现支出'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("w"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("updateTime "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("time")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" withdraw "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" w "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" w"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("driverId "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{$driver['")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("']}'")]),t._v("\n                        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("union")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("all")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("money"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("postRadio "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" money"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'车费划分'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("updateTime "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("time")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" buyCar "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" b\n                        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("left")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" journey "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("journeyId "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id\n                        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("left")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" driver "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" d "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("driverId "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isPostMoney "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("workFlow "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'已完成'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{$driver['")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("']}'")]),t._v("\n")])])])])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"时间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#时间"}},[t._v("#")]),t._v(" 时间")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("mysql时间格式化函数")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("DATE_FORMAT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("NOW")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%b %d %Y %h:%i %p'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nDATE_FORMAT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("NOW")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%m-%d-%Y'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nDATE_FORMAT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("NOW")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%d %b %y'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nDATE_FORMAT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("NOW")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%d %b %Y %T:%f'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])]),t._v(" "),a("hr"),t._v(" "),a("ul",[a("li",[a("p",[t._v("mysql获取当前年,月,日")]),t._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("date_format(now(),'%Y-%m-%d')\n//具体取哪个或哪几个自己决定\n")])])])])]),t._v(" "),a("h2",{attrs:{id:"排序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#排序"}},[t._v("#")]),t._v(" 排序")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("数据库字段按长短排序")])]),t._v(" "),a("li",[a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("order by length(`字段名`) DESC\n")])])])])]),t._v(" "),a("h2",{attrs:{id:"截断"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#截断"}},[t._v("#")]),t._v(" 截断")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("如果要截断MYSQL查询出的数据,需要使用函数"),a("code",[t._v("SUBSTRING_INDEX（str, delim, count）")])]),t._v(" "),a("ul",[a("li",[t._v("str:需要拆分的字符串")]),t._v(" "),a("li",[t._v("delim:字符串分隔符")]),t._v(" "),a("li",[t._v("count:\n"),a("ul",[a("li",[t._v("当count等于正数,函数得到第count个分隔符之前的所有字符")]),t._v(" "),a("li",[t._v("当count等于负数,函数得到第count个分隔符之后的所有字符")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("假如SUBSTRING_INDEX（'123-456', '-', 1)得到的就是123")]),t._v(" "),a("p",[t._v("SUBSTRING_INDEX（'123-456', '-', -1)得到的就是456")])])]),t._v(" "),a("li",[a("p",[t._v("代码例子")]),t._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("select co.name,ha.id from haveCoupon as ha \n        left join coupon as co on ha.couponId = co.id  \n        where ha.khid = '{$kehu['khid']}' and co.applyType = '{$shop['type']}'\n        and ha.workFlow = '未使用' and now() < ha.expirationTime and \n        (\n            (SUBSTRING_INDEX((select timeList from coupon as  cp where cp.id = co.id), '~',1) > '{$theme['startTime']}'\n             && \n             SUBSTRING_INDEX((select timeList from coupon as  cp where cp.id = co.id), '~',-1) > '{$theme['startTime']}'\n            ) \n            ||\n            (SUBSTRING_INDEX((select timeList from coupon as  cp where cp.id = co.id), '~',1) > '{$theme['startTime']}'\n             && \n             SUBSTRING_INDEX((select timeList from coupon as  cp where cp.id = co.id), '~',1) < '{$theme['endTime']}'\n            ) \n        )\n        order by ha.time\n")])])])]),t._v(" "),a("li",[a("p",[t._v("但是记得如果你存的时间之间有空格,那就要用trim函数去掉字符串两边的空格")]),t._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("select co.name,ha.id from haveCoupon as ha \n        left join coupon as co on ha.couponId = co.id  \n        where ha.khid = '{$kehu['khid']}' and co.applyType = '{$shop['type']}'\n        and ha.workFlow = '未使用' and now() < ha.expirationTime and \n        (\n            TRIM((SUBSTRING_INDEX(co.timeList, '~',1)) < '{$round['startTime']}'\n                 && \n                 TRIM(SUBSTRING_INDEX(co.timeList, '~',-1)) > '{$round['startTime']}'\n                ) \n            ||\n            TRIM((SUBSTRING_INDEX(co.timeList, '~',1)) > '{$round['startTime']}'\n                 && \n                 TRIM(SUBSTRING_INDEX(co.timeList, '~',1)) < '{$round['endTime']}'\n                ) \n        )\n        order by ha.time\n")])])])])])])}),[],!1,null,null,null);s.default=e.exports}}]);